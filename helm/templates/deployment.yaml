apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "n8n.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: volume-permissions
          image: busybox:1.36
          command: ["sh", "-c", "chown 1000:1000 /data"]
          volumeMounts:
            - name: n8n-claim0
              mountPath: /data
      containers:
        - command:
            - /bin/sh
          args:
            - -c
            - sleep 5; n8n start
          env:
            - name: DB_TYPE
              value: postgresdb
            - name: DB_POSTGRESDB_HOST
              value: {{ .Values.postgres.host }}
            - name: DB_POSTGRESDB_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: DB_POSTGRESDB_DATABASE
              value: {{ .Values.postgres.database }}
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: {{ .Values.postgres.credentials.nonRootUserKey }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: {{ .Values.postgres.credentials.nonRootPasswordKey }}
            - name: N8N_PROTOCOL
              value: {{ .Values.n8n.protocol }}
            - name: EXECUTIONS_MODE
              value: queue
            - name: N8N_ENCRYPTION_KEY
              value: {{ .Values.n8n.encryptionKey }}
            - name: N8N_HOST
              value: {{ .Values.n8n.url }}
            - name: N8N_PORT
              value: {{ .Values.service.port | quote }}
            - name: GENERIC_TIMEZONE
              value: {{ .Values.n8n.env.timezone }}
            - name: QUEUE_BULL_REDIS_HOST
              value: {{ .Values.n8n.env.redisHost }}
            - name: WEBHOOK_URL
              value: https://{{ .Values.n8n.url }}/
            - name: QUEUE_BULL_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
          image: n8nio/n8n
          name: n8n
          ports:
            - containerPort: {{ .Values.service.port }}
              name: n8n
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              port: n8n
              path: /healthz/readiness
          livenessProbe:
            httpGet:
              port: n8n
              path: /healthz
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-claim0
      restartPolicy: Always
      volumes:
        - name: n8n-claim0
          persistentVolumeClaim:
            claimName:  {{ include "n8n.fullname" . }}
        - name: postgres-secret
          secret:
            secretName: {{ .Values.postgres.credentials.secretName }}